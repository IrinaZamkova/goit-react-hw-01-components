{"version":3,"sources":["components/profile-component/profile.module.css","components/statistic-component/statistic.module.css","components/profile-component/profiles.js","components/statistic-component/statistics.js","components/friends-components/friends.component.js","components/friends-components/friendsListItem.js","components/friends-components/friendsList.js","components/transaction-components/transactions.component.js","components/transaction-components/transactions.js","components/App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","styles","container","description","img","src","alt","list","item","label","quantity","followers","views","likes","defaultProps","Statistics","title","section","statList","map","stat","key","id","style","backgroundColor","Math","floor","random","toString","substr","statItem","lable","percentage","defaultPrors","List","styled","ul","li","span","props","isOnline","p","FriendListItem","friend","width","FriendList","friends","Table","table","thead","tr","TransactionHistory","items","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,UAAY,2BAA2B,YAAc,6BAA6B,IAAM,qBAAqB,KAAO,sBAAsB,SAAW,0BAA0B,KAAO,sBAAsB,KAAO,wB,kBCArOD,EAAOC,QAAU,CAAC,QAAU,2BAA2B,MAAQ,yBAAyB,SAAW,4BAA4B,SAAW,8B,ktGCGpIC,EAAU,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MAC9C,OACI,yBAAKC,UAAWC,IAAOC,WACrB,yBAAKF,UAAWC,IAAOE,aACrB,yBAAKH,UAAWC,IAAOG,IAAKC,IAAKP,EAAQQ,IAAI,gBAC7C,uBAAGN,UAAWC,IAAON,MAAOA,GAC5B,+BAAKC,GACL,2BAAIC,IAGN,wBAAIG,UAAWC,IAAOM,MACpB,wBAAIP,UAAWC,IAAOO,MACpB,0BAAMR,UAAWC,IAAOQ,OAAxB,aACA,0BAAMT,UAAWC,IAAOS,UAAWX,EAAMY,YAE3C,wBAAIX,UAAWC,IAAOO,MACpB,0BAAMR,UAAWC,IAAOQ,OAAxB,SACA,0BAAMT,UAAWC,IAAOS,UAAWX,EAAMa,QAE3C,wBAAIZ,UAAWC,IAAOO,MACpB,0BAAMR,UAAWC,IAAOQ,OAAxB,SACA,0BAAMT,UAAWC,IAAOS,UAAWX,EAAMc,WAOnDnB,EAAQoB,aAAe,CACrBhB,OAAO,iEACPD,SAAS,gBACTD,IAAI,OAYOF,Q,uBC3Cf,SAASqB,EAAT,GAAuC,IAAjBC,EAAgB,EAAhBA,MAAOjB,EAAS,EAATA,MAQ3B,OACE,6BAASC,UAAWC,IAAOgB,SACxBD,GAAS,wBAAIhB,UAAWC,IAAOe,OAAQA,GAExC,wBAAIhB,UAAWC,IAAOiB,UACnBnB,EAAMoB,KAAI,SAACC,GAAD,OACT,wBACEC,IAAKD,EAAKE,GACVC,MAAO,CACLC,gBAdR,KACC,SAAWC,KAAKC,MAAsB,SAAhBD,KAAKE,UAAqBC,SAAS,KAAKC,QAAQ,IAejE7B,UAAWC,IAAO6B,UAElB,0BAAM9B,UAAWC,IAAO8B,OAAQX,EAAKX,OACrC,0BAAMT,UAAWC,IAAO+B,YAAaZ,EAAKY,WAA1C,WAQZjB,EAAWkB,aAAe,CACxBjB,MAAO,IAYMD,Q,qhCC7Cf,IAAMmB,EAAOC,IAAOC,GAAV,KAUVF,EAAKG,GAAKF,IAAOE,GAAjB,KAiBAH,EAAKI,KAAOH,IAAOG,KAAnB,KAKsB,SAACC,GAAD,OAAYA,EAAMC,SAAN,QAA2B,SAI7DN,EAAK9B,IAAM+B,IAAO/B,IAAlB,KAMA8B,EAAKO,EAAIN,IAAOM,EAAhB,KAGeP,QCzBAQ,EAlBQ,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB7C,EAA2B6C,EAA3B7C,OAAQH,EAAmBgD,EAAnBhD,KAAM6C,EAAaG,EAAbH,SACtB,OACE,kBAAC,EAAKH,GAAN,KACE,kBAAC,EAAKC,KAAN,CAAWE,SAAUA,IACrB,kBAAC,EAAKpC,IAAN,CAAUC,IAAKP,EAAQQ,IAAI,SAASsC,MAAM,OAC1C,kBAAC,EAAKH,EAAN,KAAS9C,KCYAkD,EAjBI,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACE,kBAAC,EAAD,KACGA,EAAQ3B,KAAI,SAACwB,GAAD,OACX,kBAAC,EAAD,CAAgBA,OAAQA,EAAQtB,IAAKsB,EAAOrB,U,o4BCPpD,IAAMyB,EAAQZ,IAAOa,MAAV,KAUXD,EAAME,MAAQd,IAAOc,MAArB,KAUAF,EAAMG,GAAKf,IAAOe,GAAlB,KAkBeH,QCDAI,EAnCY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC5B,OACE,kBAAC,EAAD,KACE,kBAAC,EAAMH,MAAP,KACE,4BACE,oCACA,sCACA,0CAIJ,+BACGG,EAAMjC,KAAI,SAACX,GAAD,OACT,kBAAC,EAAM0C,GAAP,CAAU7B,IAAKb,EAAKc,IAClB,4BAAKd,EAAK6C,KAAV,KACA,4BAAK7C,EAAK8C,OAAV,KACA,4BAAK9C,EAAK+C,SAAV,YCOGC,MAjBf,WACE,OACE,oCACE,kBAAC,EAAD,CACE7D,KAAM8D,EAAK9D,KACXC,IAAK6D,EAAK7D,IACVC,SAAU4D,EAAK5D,SACfC,OAAQ2D,EAAK3D,OACbC,MAAO0D,EAAK1D,QAEd,kBAAC,EAAD,CAAYiB,MAAM,eAAejB,MAAO2D,IACxC,kBAAC,EAAD,CAAYZ,QAASA,IATvB,IAUE,kBAAC,EAAD,CAAoBM,MAAOO,IAV7B,MCRJC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b0493376.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"profile_container__1T-eJ\",\"description\":\"profile_description__3dd7b\",\"img\":\"profile_img__dYjOa\",\"name\":\"profile_name__3ETLN\",\"quantity\":\"profile_quantity__3EPXF\",\"list\":\"profile_list__Biuoz\",\"item\":\"profile_item__1GInP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"statistic_section__3b72W\",\"title\":\"statistic_title__zXtti\",\"statList\":\"statistic_statList__2OEmC\",\"statItem\":\"statistic_statItem__1xigZ\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport  styles from\"./profile.module.css\";\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => {\r\n  return (\r\n      <div className={styles.container}>\r\n        <div className={styles.description}>\r\n          <img className={styles.img} src={avatar} alt=\"user avatar\" />\r\n          <p className={styles.name}>{name}</p>\r\n          <p>@{tag}</p>\r\n          <p>{location}</p>\r\n        </div>\r\n\r\n        <ul className={styles.list}>\r\n          <li className={styles.item}>\r\n            <span className={styles.label}>Followers</span>\r\n            <span className={styles.quantity}>{stats.followers}</span>\r\n          </li>\r\n          <li className={styles.item}>\r\n            <span className={styles.label}>Views</span>\r\n            <span className={styles.quantity}>{stats.views}</span>\r\n          </li>\r\n          <li className={styles.item}>\r\n            <span className={styles.label}>Likes</span>\r\n            <span className={styles.quantity}>{stats.likes}</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n  \r\n  );\r\n};\r\n  Profile.defaultProps = {\r\n    avatar:'https://dummyimage.com/640x480/2a2a2a/ffffff&text=avatar+image',\r\n    location:'not specified',\r\n    tag:'...',\r\n  };\r\n\r\nProfile.propTypes={\r\nuser:PropTypes.shape({\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string,\r\n  avatar: PropTypes.string,\r\n  location: PropTypes.string,\r\n  stats : PropTypes.number.isRequired,\r\n})\r\n};   \r\nexport default Profile;\r\n","import React from \"react\";\r\nimport styles from \"./statistic.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Statistics({ title, stats }) {\r\n  const bgColor = () => {\r\n    return (\r\n      \"#\" +\r\n      (\"000022\" + Math.floor(Math.random() * 16777216).toString(16)).substr(-6)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <section className={styles.section}>\r\n      {title && <h2 className={styles.title}>{title}</h2>}\r\n\r\n      <ul className={styles.statList}>\r\n        {stats.map((stat) => (\r\n          <li\r\n            key={stat.id}\r\n            style={{\r\n              backgroundColor: bgColor(),\r\n            }}\r\n            className={styles.statItem}\r\n          >\r\n            <span className={styles.lable}>{stat.label}</span>\r\n            <span className={styles.percentage}>{stat.percentage}%</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nStatistics.defaultPrors = {\r\n  title: \"\",\r\n};\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default Statistics;\r\n","import styled from \"styled-components\";\r\n\r\nconst List = styled.ul`\r\n  margin: 0 auto;\r\n  padding: 0;\r\n  width: 300px;\r\n  height: auto;\r\n  list-style: none;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nList.li = styled.li`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: nowrap;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n  background-color: white;\r\n  border: 1px solid gray;\r\n  box-shadow: 4px 6px 18px -1px rgba(130, 125, 130, 0.64);\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  color: black;\r\n  &:last-child {\r\n    margin-bottom: 0px;\r\n  }\r\n`;\r\n\r\nList.span = styled.span`\r\n  display: block;\r\n  width: 15px;\r\n  height: 15px;\r\n  border-radius: 50%;\r\n  background-color: ${(props) => (props.isOnline ? `green` : \"red\")};\r\n  margin-left: 15px;\r\n`;\r\n\r\nList.img = styled.img`\r\n  display: block;\r\n  margin: 10px;\r\n  border-radius: 10%;\r\n`;\r\n\r\nList.p = styled.p`\r\n  display: block;\r\n`;\r\nexport default List;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport List from \"./friends.component\";\r\n\r\nconst FriendListItem = ({ friend }) => {\r\n  const { avatar, name, isOnline } = friend;\r\n  return (\r\n    <List.li>\r\n      <List.span isOnline={isOnline}></List.span>\r\n      <List.img src={avatar} alt=\"avatar\" width=\"48\" />\r\n      <List.p>{name}</List.p>\r\n    </List.li>\r\n  );\r\n};\r\n\r\nFriendListItem.propTypes = {\r\n  friend: PropTypes.shape({\r\n    isOnline: PropTypes.bool.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n  }),\r\n};\r\nexport default FriendListItem;\r\n","import React from \"react\";\r\nimport FriendListItem from \"./friendsListItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport List from \"./friends.component\";\r\n\r\nconst FriendList = ({ friends }) => {\r\n  return (\r\n    <List>\r\n      {friends.map((friend) => (\r\n        <FriendListItem friend={friend} key={friend.id} />\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\nexport default FriendList;\r\n","import styled from \"styled-components\";\r\n\r\nconst Table = styled.table`\r\n  min-width: 500px;\r\n  max-width: 80%;\r\n  margin: 0 auto;\r\n  border-collapse: collapse;\r\n  box-sizing: border-box;\r\n  border: 1px solid #e6e6e6;\r\n  font-size: 14px;\r\n  box-shadow: 4px 6px 18px -1px rgba(130, 125, 130, 0.64);\r\n`;\r\nTable.thead = styled.thead`\r\n  background-color: #20b0f2;\r\n  color: #fff;\r\n  & th {\r\n    text-transform: uppercase;\r\n    border: 1px solid #e6e6e6;\r\n    height: 30px;\r\n  }\r\n`;\r\n\r\nTable.tr = styled.tr`\r\n  vertical-align: center;\r\n  text-align: center;\r\n  &:nth-child(odd) {\r\n    background-color: #e6e6e6;\r\n  }\r\n  &:nth-child(even) {\r\n    background-color: white;\r\n  }\r\n  & td {\r\n    width: 33%;\r\n    height: 30px;\r\n    color: gray;\r\n    text-transform: capitalize;\r\n    border: 1px solid #e6e6e6;\r\n  }\r\n`;\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport Table from \"./transactions.component\";\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n  return (\r\n    <Table>\r\n      <Table.thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </Table.thead>\r\n\r\n      <tbody>\r\n        {items.map((item) => (\r\n          <Table.tr key={item.id}>\r\n            <td>{item.type} </td>\r\n            <td>{item.amount} </td>\r\n            <td>{item.currency} </td>\r\n          </Table.tr>\r\n        ))}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\n//   не знаю как тут передать что все PropTypes.shape-string.isRequired  в одну строку скорее всего можно\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n     type: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\nexport default TransactionHistory;\r\n","import React from \"react\";\nimport Profile from \"./profile-component/profiles\";\nimport user from \"./profile-component/profile.json\";\nimport Statistics from \"./statistic-component/statistics\";\nimport statisticalData from \"./statistic-component/statistics.json\";\nimport FriendList from \"./friends-components/friendsList\";\nimport friends from \"./friends-components/friends.json\";\nimport transactions from \"./transaction-components/transactions.json\";\nimport TransactionHistory from \"./transaction-components/transactions\";\n\nfunction App() {\n  return (\n    <>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <FriendList friends={friends} />,\n      <TransactionHistory items={transactions} />,\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}